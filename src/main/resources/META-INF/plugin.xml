<idea-plugin>
    <id>tk.cofedream.plugin.mybatis</id>
    <name>Cofe-Mybatis</name>
    <vendor email="cofedfream@outlook.com" url="https://github.com/cofedream">cofedream</vendor>

    <description><![CDATA[
    <h1>Cofe Mybatis</h1>
    <p>
        <b>
            <a href="https://gitee.com/cofedream/Cofe_Mybatis">Gitee</a> |
            <a href="https://github.com/cofedream/Cofe-Mybatis">GitHub</a>
        </b>
    </p>
    <p><b>Free Mybatis Plugin For Jetbrains <em>Created By Cofedream</em>.</b></p>
    <p><b>Features:</b>
    <ul>
        <li>Support Spring Inject.</li>
        <li>
            Support Mybatis.
            <ul>
                <li>SQL parameter completion.</li>
                <li>Mapper XML Validate.</li>
            </ul>
        </li>
        <li>Support <a href="https://gitee.com/free/Mapper">Mapper</a> MapperScan.</li>
        <li>More.</li>
    </ul>
    ]]></description>

    <change-notes><![CDATA[
        <i>new features:</i>
        <ul>
            <li>新增 &lt;resultMap/&gt; 标签的Documentation</li>
            <li>&lt;test/&gt;和&lt;when/&gt;标签中的 test 属性 现已支持提示</li>
            <li>调整Mapper XML 中的校验</li>
        </ul>
        <i>fixed bugs:</i>
        <ul>
            <li>调整 &lt;sql/&gt; 标签的Documentation 的显示样式</li>
            <li>修正 IC-IDEA 版本中 Mapper.xml 的 Statement 不支持 SQL Parameter 提示的问题</li>
            <li>修正 #{param[1-n].} 的时候不会提示的问题</li>
        </ul>
        <i>other:</i>
        <ul>
            <li>add plugin icon</li>
        </ul>
    ]]></change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products -->
    <depends>com.intellij.modules.java</depends>
    <!-- Optional dependency on another plugin.
       If the plugin with the "com.MySecondPlugin" ID is installed, the contents of mysecondplugin.xml
       (the format of this file conforms to the format of plugin.xml) will be loaded. -->
    <depends optional="true" config-file="mybatis-spring.xml">com.intellij.spring</depends>
    <depends optional="true" config-file="mybatis-spring-boot.xml">com.intellij.spring.boot</depends>
    <depends optional="true" config-file="mybatis-database.xml">com.intellij.database</depends>

    <!-- Resource bundle (/messages/MyPluginBundle.properties) to be used
       with `key` attributes in extension points and implicit keys like
       `action.[pluginID].[ActionID].text` -->
    <resource-bundle>messages.MyBatisBundle</resource-bundle>
    <extensions defaultExtensionNs="com.intellij">
        <projectService serviceInterface="tk.cofe.plugin.mybatis.service.MapperService"
                        serviceImplementation="tk.cofe.plugin.mybatis.service.impl.MapperServiceImpl"/>
        <projectService serviceInterface="tk.cofe.plugin.mybatis.service.JavaPsiService"
                        serviceImplementation="tk.cofe.plugin.mybatis.service.impl.JavaPsiServiceImpl"/>
        <!--If your plugin targets 2019.1 or later,
        please use extension point com.intellij.dom.fileMetaData instead and specify rootTagName and domVersion/stubVersion in plugin.xml-->
        <dom.fileDescription implementation="tk.cofe.plugin.mybatis.dom.description.MapperXmlDescription"/>
        <dom.fileDescription implementation="tk.cofe.plugin.mybatis.dom.config.ConfigurationXmlDescription"/>
        <!--参考
            https://intellij-support.jetbrains.com/hc/en-us/community/posts/206126539-How-do-I-create-a-virtual-implementation-for-an-interface-from-an-xml-document-
            https://intellij-support.jetbrains.com/hc/en-us/community/posts/206110419-How-to-implement-go-to-to-implementation-
        -->
        <!--<definitionsSearch implementation="tk.cofedream.plugin.mybatis.search.MapperDefinitionSearch"/>-->
        <!--实现一致-->
        <definitionsScopedSearch implementation="tk.cofe.plugin.mybatis.search.MethodToStatementImplementationsSearch"/>
        <!--<definitionsScopedSearch implementation="tk.cofedream.plugin.mybatis.search.StatementToMethodImplementationsSearch"/>-->
        <!-- Add your extensions here -->

        <codeInsight.lineMarkerProvider language="JAVA"
                                        implementationClass="tk.cofe.plugin.mybatis.linemarker.MapperInterfaceLineMarkerProvider"/>
        <!--<codeInsight.lineMarkerProvider language="JAVA"-->
        <!--implementationClass="tk.cofedream.plugin.mybatis.linemarker.MapperMethodLineMarkerProvider"/>-->
        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="tk.cofe.plugin.mybatis.linemarker.MapperStatementLineMarkerProvider"/>

        <lang.documentationProvider language="XML"
                                    implementationClass="tk.cofe.plugin.mybatis.dom.documentation.SqlTagDocumentation"
                                    order="first"/>
        <lang.documentationProvider language="XML"
                                    implementationClass="tk.cofe.plugin.mybatis.dom.documentation.ResultMapTagDocumentation"
                                    order="first"/>

        <!--<methodImplementor implementation="tk.cofedream.plugin.mybatis.implementor.MybatisMethodImplementor"/>-->
        <!--<customUsageSearcher implementation="tk.cofe.plugin.mybatis.java.usages.ClassFieldFindUsageSearcher"/>-->
        <!--<lang.findUsagesProvider language="JAVA" implementationClass="tk.cofe.plugin.mybatis.java.usages.ClassFieldFindUsagesProvider"/>-->
        <!--<customUsageSearcher implementation="tk.cofedream.plugin.mybatis.dom.usage.MapperXmlUsageSearcher"/>-->
        <!--<findUsagesHandlerFactory implementation="tk.cofedream.plugin.mybatis.dom.usage.MybatisFindUsagesHandlerFactory"/>-->
        <!--<gotoDeclarationHandler implementation="tk.cofedream.plugin.mybatis.navigation.MybatisGotoDeclarationHandler"/>-->
        <!--<targetElementEvaluator language="XML" implementationClass="tk.cofedream.plugin.mybatis.code.insight.MybatisTargetElementEvaluator"/>-->
        <!--<java.elementFinder implementation=""-->
        <referencesSearch implementation="tk.cofe.plugin.mybatis.search.FieldReferenceSearch"/>
        <!--<methodReferencesSearch implementation="tk.cofe.plugin.mybatis.search.MapperMethodReferencesSearch"/>-->
        <!--<lang.findUsagesProvider-->

        <!--<psi.referenceContributor language="JAVA"-->
        <!--implementation="tk.cofedream.plugin.mybatis.java.psi.FieldReferenceContributor"/>-->
        <!--<referencesSearch implementation="tk.cofedream.plugin.mybatis.referencessearch.MapperXmlReferencesSearch"/>-->
        <!--<psi.referenceContributor language="XML"-->
        <!--implementation="tk.cofedream.plugin.mybatis.dom.psi.MapperReferenceContributor"/>-->
        <!--<refactoring.elementListenerProvider implementation="tk.cofedream.plugin.mybatis.refactoring.ElementListenerProvider"/>-->
        <!--<renamePsiElementProcessor implementation="tk.cofedream.plugin.mybatis.refactoring.rename.MapperStatementRenameProcessor" order="first" id="mapperStatementRename"/>-->

        <completion.contributor language="XML" implementationClass="tk.cofe.plugin.mybatis.completion.MapperXmlCompletionContributor"/>
        <completion.contributor id="xml-sql-param-completion" language="XML" order="first"
                                implementationClass="tk.cofe.plugin.mybatis.completion.XmlFileSqlParameterCompletionContributor"/>
        <!--<completion.contributor id="mapper-example-completion" language="JAVA" order="first"-->
        <!--                        implementationClass="tk.cofe.plugin.mybatis.completion.TkMapperCompletionContributor"/>-->
        <!--纯提示-->
        <annotator language="XML" implementationClass="tk.cofe.plugin.mybatis.annotation.MapperXmlAnnotator"/>

        <!--代码检查-->
        <localInspection implementationClass="tk.cofe.plugin.mybatis.dom.inspection.MapperXmlInspection"
                         language="XML" displayName="mapper xml validate" level="ERROR" enabledByDefault="true"
                         groupKey="action.group.xml.text" groupPath="Mybatis"/>
        <localInspection implementationClass="tk.cofe.plugin.mybatis.inspection.MapperInterfaceMethodInspection"
                         language="JAVA" displayName="unmapped statement" level="ERROR" enabledByDefault="true"
                         groupKey="action.group.interface.text" groupPath="Mybatis"/>
        <intentionAction>
            <className>tk.cofe.plugin.mybatis.intention.AddParamAnnotationIntention</className>
            <categoryKey>intention.category.key</categoryKey>
        </intentionAction>
        <!--<intentionAction>-->
        <!--    <className>tk.cofe.plugin.mybatis.intention.GenerateStatementIntention</className>-->
        <!--</intentionAction>-->
    </extensions>

    <actions>
        <!-- Add your actions here -->
    </actions>
</idea-plugin>