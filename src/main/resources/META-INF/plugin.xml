<idea-plugin>
    <id>tk.cofedream.plugin.mybatis</id>
    <name>Cofe-Mybatis</name>
    <vendor email="cofedfream@outlook.com" url="https://github.com/cofedream">cofedream</vendor>

    <description><![CDATA[
    Free Mybatis Plugin
    <em>Created By Cofedream</em>
    ]]></description>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->
    <!-- Optional dependency on another plugin.
       If the plugin with the "com.MySecondPlugin" ID is installed, the contents of mysecondplugin.xml
       (the format of this file conforms to the format of plugin.xml) will be loaded. -->
    <depends config-file="mybatis-spring.xml">com.intellij.spring</depends>
    <depends config-file="mybatis-database.xml">com.intellij.database</depends>

    <!-- Resource bundle (/messages/MyPluginBundle.properties) to be used
       with `key` attributes in extension points and implicit keys like
       `action.[pluginID].[ActionID].text` -->
    <resource-bundle>MybatisBundle</resource-bundle>

    <extensions defaultExtensionNs="com.intellij">
        <projectService serviceInterface="tk.cofe.plugin.mybatis.service.MapperService"
                        serviceImplementation="tk.cofe.plugin.mybatis.service.impl.MapperServiceImpl"/>
        <projectService serviceInterface="tk.cofe.plugin.mybatis.service.JavaPsiService"
                        serviceImplementation="tk.cofe.plugin.mybatis.service.impl.JavaPsiServiceImpl"/>
        <!--If your plugin targets 2019.1 or later,
        please use extension point com.intellij.dom.fileMetaData instead and specify rootTagName and domVersion/stubVersion in plugin.xml-->
        <dom.fileDescription implementation="tk.cofe.plugin.mybatis.dom.description.MapperXmlDescription"/>
        <dom.fileDescription implementation="tk.cofe.plugin.mybatis.dom.config.ConfigurationXmlDescription"/>
        <!--参考
            https://intellij-support.jetbrains.com/hc/en-us/community/posts/206126539-How-do-I-create-a-virtual-implementation-for-an-interface-from-an-xml-document-
            https://intellij-support.jetbrains.com/hc/en-us/community/posts/206110419-How-to-implement-go-to-to-implementation-
        -->
        <!--<definitionsSearch implementation="tk.cofedream.plugin.mybatis.search.MapperDefinitionSearch"/>-->
        <!--实现一致-->
        <definitionsScopedSearch implementation="tk.cofe.plugin.mybatis.search.MethodToStatementImplementationsSearch"/>
        <!--<definitionsScopedSearch implementation="tk.cofedream.plugin.mybatis.search.StatementToMethodImplementationsSearch"/>-->
        <!-- Add your extensions here -->

        <codeInsight.lineMarkerProvider language="JAVA"
                                        implementationClass="tk.cofe.plugin.mybatis.linemarker.MapperInterfaceLineMarkerProvider"/>
        <!--<codeInsight.lineMarkerProvider language="JAVA"-->
                                        <!--implementationClass="tk.cofedream.plugin.mybatis.linemarker.MapperMethodLineMarkerProvider"/>-->
        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="tk.cofe.plugin.mybatis.linemarker.MapperStatementLineMarkerProvider"/>
        <!--<methodImplementor implementation="tk.cofedream.plugin.mybatis.implementor.MybatisMethodImplementor"/>-->
        <customUsageSearcher implementation="tk.cofe.plugin.mybatis.java.usages.ClassFieldFindUsageSearcher"/>
        <!--<lang.findUsagesProvider language="JAVA" implementationClass="tk.cofe.plugin.mybatis.java.usages.ClassFieldFindUsagesProvider"/>-->
        <!--<customUsageSearcher implementation="tk.cofedream.plugin.mybatis.dom.usage.MapperXmlUsageSearcher"/>-->
        <!--<findUsagesHandlerFactory implementation="tk.cofedream.plugin.mybatis.dom.usage.MybatisFindUsagesHandlerFactory"/>-->
        <!--<gotoDeclarationHandler implementation="tk.cofedream.plugin.mybatis.navigation.MybatisGotoDeclarationHandler"/>-->
        <!--<targetElementEvaluator language="XML" implementationClass="tk.cofedream.plugin.mybatis.code.insight.MybatisTargetElementEvaluator"/>-->
        <!--<java.elementFinder implementation=""-->
        <referencesSearch implementation="tk.cofe.plugin.mybatis.search.FieldReferenceSearch"/>
        <methodReferencesSearch implementation="tk.cofe.plugin.mybatis.search.MapperMethodReferencesSearch"/>
        <!--<lang.findUsagesProvider-->
        <!--<psi.referenceContributor language="JAVA"-->
                                  <!--implementation="tk.cofedream.plugin.mybatis.java.psi.FieldReferenceContributor"/>-->
        <!--<referencesSearch implementation="tk.cofedream.plugin.mybatis.referencessearch.MapperXmlReferencesSearch"/>-->
        <!--<psi.referenceContributor language="XML"-->
                                  <!--implementation="tk.cofedream.plugin.mybatis.dom.psi.MapperReferenceContributor"/>-->
        <!--<refactoring.elementListenerProvider implementation="tk.cofedream.plugin.mybatis.refactoring.ElementListenerProvider"/>-->
        <!--<renamePsiElementProcessor implementation="tk.cofedream.plugin.mybatis.refactoring.rename.MapperStatementRenameProcessor" order="first" id="mapperStatementRename"/>-->

        <!--<completion.contributor language="XML" implementationClass="tk.cofedream.plugin.mybatis.completion.MapperXmlCompletionContributor"/>-->
        <completion.contributor language="SQL" implementationClass="tk.cofe.plugin.mybatis.completion.XmlSqlParameterCompletionContributor" order="first"/>
        <!--代码检查-->
        <!--<localInspection language="JAVA" shortName="MybatisMapperMethodInspection" applyToDialects="false"-->
        <!--                 bundle="MybatisBundle" key="mapper.inspection.display.name"-->
        <!--                 groupBundle="MybatisBundle" groupKey="inspection.group.java" groupPath="Mybatis"-->
        <!--                 enabledByDefault="true" level="ERROR"-->
        <!--                 implementationClass="tk.cofe.plugin.mybatis.dom.inspection.MapperMethodInspection"/>-->
        <localInspection language="XML" shortName="MapperIncludeInspection" applyToDialects="false"
                         bundle="MybatisBundle" key="mapper.inspection.display.name"
                         groupBundle="MybatisBundle" groupKey="inspection.group.xml" groupPath="Mybatis"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="tk.cofe.plugin.mybatis.dom.inspection.MapperIncludeInspection"/>
        <intentionAction>
            <className>tk.cofe.plugin.mybatis.intention.GenerateParamAnnotationIntention</className>
        </intentionAction>
        <intentionAction>
            <className>tk.cofe.plugin.mybatis.intention.GenerateStatementIntention</className>
        </intentionAction>
    </extensions>

    <actions>
        <!-- Add your actions here -->
    </actions>
</idea-plugin>