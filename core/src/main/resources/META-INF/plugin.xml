<!--
  ~ Copyright (C) 2019-2022 cofe
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <https://www.gnu.org/licenses/>.
  -->

<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
    <id>tk.cofedream.plugin.mybatis</id>
    <name>Cofe-Mybatis</name>
    <vendor email="cofedfream@outlook.com" url="https://github.com/cofedream">cofedream</vendor>

    <description><![CDATA[
    <p>
        <b>
            <a href="https://gitee.com/cofedream/Cofe-Mybatis">Gitee</a> |
            <a href="https://github.com/cofedream/Cofe-Mybatis">GitHub</a>
        </b>
    </p>
    <p><b>Features:</b>
    <ul>
        <li>Support Spring Inject.</li>
        <li>
            Support Mybatis.
            <ul>
                <li>SQL parameter completion.</li>
                <li>Mapper XML Validate.</li>
            </ul>
        </li>
        <li>More.</li>
    </ul>
    ]]></description>

    <change-notes><![CDATA[
        <ul>
            <li>处理Mapper跨文件引用ResultMap问题</li>
            <li>ResultMap#Extends添加提示</li>
        </ul>
    ]]></change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products -->
    <!--产品兼容性-->
    <!-- https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.xml</depends>
    <depends>com.intellij.java</depends>
    <!-- Optional dependency on another plugin.
       If the plugin with the "com.MySecondPlugin" ID is installed, the contents of mysecondplugin.xml
       (the format of this file conforms to the format of plugin.xml) will be loaded. -->
    <depends optional="true" config-file="mybatis-spring.xml">com.intellij.spring</depends>

    <!-- Resource bundle (/messages/MyPluginBundle.properties) to be used
       with `key` attributes in extension points and implicit keys like
       `action.[pluginID].[ActionID].text` -->
    <resource-bundle>messages.MyBatisBundle</resource-bundle>

    <xi:include href="mybatis.xml"/>
    <!-- Extension points defined by the plugin.
    Extension points are registered by a plugin so that other
    plugins can provide this plugin with certain data. The
       "beanClass" attribute specifies the class the implementations
       of which can be used for the extension point. -->
    <extensions defaultExtensionNs="com.intellij">
        <applicationConfigurable groupId="tools" displayName="Cofe Mybatis"
                                 id="tk.cofe.plugin.mybatis.settings.SettingsConfigurable"
                                 instance="tk.cofe.plugin.mybatis.settings.SettingsConfigurable"/>
        <applicationService serviceImplementation="tk.cofe.plugin.mybatis.settings.SettingsService"/>
        <projectService serviceInterface="tk.cofe.plugin.mybatis.service.MapperService"
                        serviceImplementation="tk.cofe.plugin.mybatis.service.impl.MapperServiceImpl"/>
        <projectService serviceInterface="tk.cofe.plugin.mybatis.service.JavaPsiService"
                        serviceImplementation="tk.cofe.plugin.mybatis.service.impl.JavaPsiServiceImpl"/>
        <projectService serviceInterface="tk.cofe.plugin.mybatis.service.TypeAliasService"
                        serviceImplementation="tk.cofe.plugin.mybatis.service.impl.TypeAliasServiceImpl"/>
        <!--If your plugin targets 2019.1 or later,
        please use extension point com.intellij.dom.fileMetaData instead and specify rootTagName and domVersion/stubVersion in plugin.xml-->
        <dom.fileMetaData implementation="tk.cofe.plugin.mybatis.dom.description.MapperXmlDescription"
                          rootTagName="mapper"/>
        <dom.fileMetaData implementation="tk.cofe.plugin.mybatis.dom.description.ConfigurationXmlDescription"
                          rootTagName="configuration"/>
        <!-- Add your extensions here -->

        <codeInsight.lineMarkerProvider language="JAVA"
                                        implementationClass="tk.cofe.plugin.mybatis.linemarker.MapperInterfaceLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="tk.cofe.plugin.mybatis.linemarker.MapperStatementLineMarkerProvider"/>

        <!--文档提示-->
        <lang.documentationProvider language="XML" order="first"
                                    implementationClass="tk.cofe.plugin.mybatis.dom.documentation.SqlTagDocumentation"/>
        <lang.documentationProvider language="XML" order="first"
                                    implementationClass="tk.cofe.plugin.mybatis.dom.documentation.ResultMapTagDocumentation"/>

        <!--参考
            https://intellij-support.jetbrains.com/hc/en-us/community/posts/206126539-How-do-I-create-a-virtual-implementation-for-an-interface-from-an-xml-document-
            https://intellij-support.jetbrains.com/hc/en-us/community/posts/206110419-How-to-implement-go-to-to-implementation-
        -->
        <!--实现一致-->
        <definitionsScopedSearch implementation="tk.cofe.plugin.mybatis.search.MethodDefinitionsSearch"/>
        <referencesSearch implementation="tk.cofe.plugin.mybatis.search.FieldReferenceSearch"/>
        <referencesSearch implementation="tk.cofe.plugin.mybatis.search.MethodParameterReferenceSearch"/>

        <!--纯提示-->
        <!--<annotator language="XML" implementationClass="tk.cofe.plugin.mybatis.annotator.MapperXmlAnnotator"/>-->

        <!--代码检查-->
        <localInspection implementationClass="tk.cofe.plugin.mybatis.dom.inspection.MapperXmlInspection"
                         language="XML" displayName="Mapper xml validate" level="ERROR" enabledByDefault="true"
                         groupKey="action.group.xml.text" groupPath="Mybatis"/>
        <localInspection implementationClass="tk.cofe.plugin.mybatis.inspection.MapperInterfaceMethodInspection"
                         language="JAVA" displayName="Unmapped statement" level="ERROR" enabledByDefault="true"
                         groupKey="action.group.interface.text" groupPath="Mybatis"/>
        <!--<implicitUsageProvider implementation=""-->
        <!--<lang.inspectionSuppressor-->
        <xml.xmlSuppressionProvider order="first"
                                    implementation="tk.cofe.plugin.mybatis.dom.inspection.MapperXmlSuppressionProvider"/>
        <intentionAction>
            <className>tk.cofe.plugin.mybatis.intention.AddParamAnnotationIntention</className>
            <categoryKey>intention.category.key</categoryKey>
        </intentionAction>
        <!--<intentionAction>-->
        <!--    <className>tk.cofe.plugin.mybatis.intention.GenerateStatementIntention</className>-->
        <!--</intentionAction>-->
    </extensions>

    <!-- Actions -->
    <actions>
    </actions>

</idea-plugin>