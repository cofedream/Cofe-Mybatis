<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
    <id>tk.cofedream.plugin.mybatis</id>
    <name>Cofe-Mybatis</name>
    <vendor email="cofedfream@outlook.com" url="https://github.com/cofedream">cofedream</vendor>

    <description><![CDATA[
    <h1>Cofe Mybatis</h1>
    <p>
        <b>
            <a href="https://gitee.com/cofedream/Cofe_Mybatis">Gitee</a> |
            <a href="https://github.com/cofedream/Cofe-Mybatis">GitHub</a>
        </b>
    </p>
    <p><b>Free Mybatis Plugin For Jetbrains <em>Created By Cofedream</em>.</b></p>
    <p><b>Features:</b>
    <ul>
        <li>Support Spring Inject.</li>
        <li>
            Support Mybatis.
            <ul>
                <li>SQL parameter completion.</li>
                <li>Mapper XML Validate.</li>
            </ul>
        </li>
        <li>Support <a href="https://gitee.com/free/Mapper">Mapper</a> MapperScan.</li>
        <li>More.</li>
    </ul>
    ]]></description>

    <change-notes><![CDATA[
        <i>new features:</i>
        <ul>
            <li>xml param support &lt;bind/&gt; name attribute prompt.</li>
        </ul>
        <i>fixed bugs:</i>
        <ul>
            <li>fix MapperScan.</li>
            <li>fix Mapper Method inspection.</li>
            <li>fix error when extra param.</li>
            <li>fix param reference error.</li>
            <li>fix param completion.</li>
        </ul>
        <i>other:</i>
        <ul>
            <li>Adjust the grammar.</li>
            <li>Support ResultType Reference Resolve.</li>
        </ul>
    ]]></change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products -->
    <depends>com.intellij.modules.java</depends>
    <!-- Optional dependency on another plugin.
       If the plugin with the "com.MySecondPlugin" ID is installed, the contents of mysecondplugin.xml
       (the format of this file conforms to the format of plugin.xml) will be loaded. -->
    <depends optional="true" config-file="mybatis-spring.xml">com.intellij.spring</depends>

    <!-- Resource bundle (/messages/MyPluginBundle.properties) to be used
       with `key` attributes in extension points and implicit keys like
       `action.[pluginID].[ActionID].text` -->
    <resource-bundle>messages.MyBatisBundle</resource-bundle>

    <xi:include href="mybatis-language.xml" xpointer="xpointer(/idea-plugin/*)"/>
    <!-- Extension points defined by the plugin.
    Extension points are registered by a plugin so that other
    plugins can provide this plugin with certain data. The
       "beanClass" attribute specifies the class the implementations
       of which can be used for the extension point. -->
    <extensions defaultExtensionNs="com.intellij">
        <projectService serviceInterface="tk.cofe.plugin.mybatis.service.MapperService"
                        serviceImplementation="tk.cofe.plugin.mybatis.service.impl.MapperServiceImpl"/>
        <projectService serviceInterface="tk.cofe.plugin.mybatis.service.JavaPsiService"
                        serviceImplementation="tk.cofe.plugin.mybatis.service.impl.JavaPsiServiceImpl"/>
        <!--If your plugin targets 2019.1 or later,
        please use extension point com.intellij.dom.fileMetaData instead and specify rootTagName and domVersion/stubVersion in plugin.xml-->
        <dom.fileDescription implementation="tk.cofe.plugin.mybatis.dom.description.MapperXmlDescription"/>
        <dom.fileDescription implementation="tk.cofe.plugin.mybatis.dom.description.ConfigurationXmlDescription"/>
        <!--参考
            https://intellij-support.jetbrains.com/hc/en-us/community/posts/206126539-How-do-I-create-a-virtual-implementation-for-an-interface-from-an-xml-document-
            https://intellij-support.jetbrains.com/hc/en-us/community/posts/206110419-How-to-implement-go-to-to-implementation-
        -->
        <!--实现一致-->
        <definitionsScopedSearch implementation="tk.cofe.plugin.mybatis.search.MethodToStatementImplementationsSearch"/>
        <!-- Add your extensions here -->

        <codeInsight.lineMarkerProvider language="JAVA"
                                        implementationClass="tk.cofe.plugin.mybatis.linemarker.MapperInterfaceLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="tk.cofe.plugin.mybatis.linemarker.MapperStatementLineMarkerProvider"/>

        <!--文档提示-->
        <lang.documentationProvider language="XML" order="first"
                                    implementationClass="tk.cofe.plugin.mybatis.dom.documentation.SqlTagDocumentation"/>
        <lang.documentationProvider language="XML" order="first"
                                    implementationClass="tk.cofe.plugin.mybatis.dom.documentation.ResultMapTagDocumentation"/>

        <referencesSearch implementation="tk.cofe.plugin.mybatis.search.FieldReferenceSearch"/>
        <!--<psi.referenceContributor language="XML" implementation="tk.cofe.plugin.mybatis.psi.ResultMapPsiReferenceContributor"/>-->
        <referencesSearch implementation="tk.cofe.plugin.mybatis.search.MapperXmlReferenceSearch$ResultMapId"/>

        <completion.contributor language="XML"
                                implementationClass="tk.cofe.plugin.mybatis.completion.MapperXmlCompletionContributor"/>

        <!--纯提示-->
        <annotator language="XML" implementationClass="tk.cofe.plugin.mybatis.annotator.MapperXmlAnnotator"/>

        <!--代码检查-->
        <localInspection implementationClass="tk.cofe.plugin.mybatis.dom.inspection.MapperXmlInspection"
                         language="XML" displayName="mapper xml validate" level="ERROR" enabledByDefault="true"
                         groupKey="action.group.xml.text" groupPath="Mybatis"/>
        <localInspection implementationClass="tk.cofe.plugin.mybatis.inspection.MapperInterfaceMethodInspection"
                         language="JAVA" displayName="unmapped statement" level="ERROR" enabledByDefault="true"
                         groupKey="action.group.interface.text" groupPath="Mybatis"/>
        <!--<implicitUsageProvider implementation=""-->
        <!--<lang.inspectionSuppressor-->
        <xml.xmlSuppressionProvider order="first"
                                    implementation="tk.cofe.plugin.mybatis.dom.inspection.MapperXmlSuppressionProvider"/>
        <intentionAction>
            <className>tk.cofe.plugin.mybatis.intention.AddParamAnnotationIntention</className>
            <categoryKey>intention.category.key</categoryKey>
        </intentionAction>
        <!--<intentionAction>-->
        <!--    <className>tk.cofe.plugin.mybatis.intention.GenerateStatementIntention</className>-->
        <!--</intentionAction>-->
    </extensions>

    <!-- Actions -->
    <actions>
    </actions>

</idea-plugin>