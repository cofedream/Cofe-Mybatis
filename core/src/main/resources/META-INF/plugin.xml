<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
    <id>tk.cofe.plugin.mybatis</id>
    <name>Cofe-Mybatis</name>
    <vendor email="cofedfream@outlook.com" url="https://github.com/cofedream">cofedream</vendor>

    <description><![CDATA[
    <h1>Cofe Mybatis</h1>
    <p>
        <b>
            <a href="https://gitee.com/cofedream/Cofe_Mybatis">Gitee</a> |
            <a href="https://github.com/cofedream/Cofe-Mybatis">GitHub</a>
        </b>
    </p>
    <p><b>Free Mybatis Plugin For Jetbrains <em>Created By Cofedream</em>.</b></p>
    <p><b>Features:</b>
    <ul>
        <li>Support Spring Inject.</li>
        <li>
            Support Mybatis.
            <ul>
                <li>SQL parameter completion.</li>
                <li>Mapper XML Validate.</li>
            </ul>
        </li>
        <li>Support <a href="https://gitee.com/free/Mapper">Mapper</a> MapperScan.</li>
        <li>More.</li>
    </ul>
    ]]></description>

    <change-notes><![CDATA[
        <i>new features:</i>
        <ul>
            <li>新增 #{xxx} 语法解析</li>
            <li>调整 &lt;foreach/&gt;标签 内属性参数提示</li>
            <li>支持 #{xxx} 跳转至定义</li>
        </ul>
        <i>fixed bugs:</i>
        <ul>
            <li>修正 Class Field引用多处问题</li>
            <li>修正 Select/ResultMap标签重复无提示问题</li>
        </ul>
    ]]></change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products -->
    <depends>com.intellij.modules.java</depends>
    <!-- Optional dependency on another plugin.
       If the plugin with the "com.MySecondPlugin" ID is installed, the contents of mysecondplugin.xml
       (the format of this file conforms to the format of plugin.xml) will be loaded. -->
    <depends optional="true" config-file="META-INF/mybatis-spring.xml">com.intellij.spring</depends>
    <depends optional="true" config-file="META-INF/mybatis-database.xml">com.intellij.database</depends>

    <!-- Resource bundle (/messages/MyPluginBundle.properties) to be used
       with `key` attributes in extension points and implicit keys like
       `action.[pluginID].[ActionID].text` -->
    <resource-bundle>messages.MyBatisBundle</resource-bundle>

    <xi:include href="/META-INF/MbspPlugin.xml" xpointer="xpointer(/idea-plugin/*)"/>
    <!-- Extension points defined by the plugin.
    Extension points are registered by a plugin so that other
    plugins can provide this plugin with certain data. The
       "beanClass" attribute specifies the class the implementations
       of which can be used for the extension point. -->
    <extensions defaultExtensionNs="com.intellij">
        <projectService serviceInterface="tk.cofe.plugin.mybatis.service.MapperService"
                        serviceImplementation="tk.cofe.plugin.mybatis.service.impl.MapperServiceImpl"/>
        <projectService serviceInterface="tk.cofe.plugin.mybatis.service.JavaPsiService"
                        serviceImplementation="tk.cofe.plugin.mybatis.service.impl.JavaPsiServiceImpl"/>
        <!--If your plugin targets 2019.1 or later,
        please use extension point com.intellij.dom.fileMetaData instead and specify rootTagName and domVersion/stubVersion in plugin.xml-->
        <dom.fileDescription implementation="tk.cofe.plugin.mybatis.dom.description.MapperXmlDescription"/>
        <dom.fileDescription implementation="tk.cofe.plugin.mybatis.dom.description.ConfigurationXmlDescription"/>
        <!--参考
            https://intellij-support.jetbrains.com/hc/en-us/community/posts/206126539-How-do-I-create-a-virtual-implementation-for-an-interface-from-an-xml-document-
            https://intellij-support.jetbrains.com/hc/en-us/community/posts/206110419-How-to-implement-go-to-to-implementation-
        -->
        <!--实现一致-->
        <definitionsScopedSearch implementation="tk.cofe.plugin.mybatis.search.MethodToStatementImplementationsSearch"/>
        <!-- Add your extensions here -->

        <codeInsight.lineMarkerProvider language="JAVA"
                                        implementationClass="tk.cofe.plugin.mybatis.linemarker.MapperInterfaceLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="tk.cofe.plugin.mybatis.linemarker.MapperStatementLineMarkerProvider"/>

        <lang.documentationProvider language="XML" order="first"
                                    implementationClass="tk.cofe.plugin.mybatis.dom.documentation.SqlTagDocumentation"/>
        <lang.documentationProvider language="XML" order="first"
                                    implementationClass="tk.cofe.plugin.mybatis.dom.documentation.ResultMapTagDocumentation"/>

        <referencesSearch implementation="tk.cofe.plugin.mybatis.search.FieldReferenceSearch"/>

        <psi.referenceContributor implementation="tk.cofe.plugin.mybatis.psi.SqlParamReferenceContributor"/>

        <completion.contributor language="XML"
                                implementationClass="tk.cofe.plugin.mybatis.completion.MapperXmlCompletionContributor"/>
        <!--纯提示-->
        <annotator language="XML" implementationClass="tk.cofe.plugin.mybatis.annotator.MapperXmlAnnotator"/>

        <!--代码检查-->
        <localInspection implementationClass="tk.cofe.plugin.mybatis.dom.inspection.MapperXmlInspection"
                         language="XML" displayName="mapper xml validate" level="ERROR" enabledByDefault="true"
                         groupKey="action.group.xml.text" groupPath="Mybatis"/>
        <localInspection implementationClass="tk.cofe.plugin.mybatis.inspection.MapperInterfaceMethodInspection"
                         language="JAVA" displayName="unmapped statement" level="ERROR" enabledByDefault="true"
                         groupKey="action.group.interface.text" groupPath="Mybatis"/>
        <intentionAction>
            <className>tk.cofe.plugin.mybatis.intention.AddParamAnnotationIntention</className>
            <categoryKey>intention.category.key</categoryKey>
        </intentionAction>
        <!--<intentionAction>-->
        <!--    <className>tk.cofe.plugin.mybatis.intention.GenerateStatementIntention</className>-->
        <!--</intentionAction>-->
    </extensions>

    <!-- Actions -->
    <actions>
    </actions>

</idea-plugin>